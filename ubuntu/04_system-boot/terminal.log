vagrant@boot:~$ sudo pvs
  PV         VG        Fmt  Attr PSize   PFree 
  /dev/sda3  ubuntu-vg lvm2 a--  <62.00g 31.00g
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ sudo vgrename ubuntu-vg main-vg
  Volume group "ubuntu-vg" successfully renamed to "main-vg"
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ cat /etc/fstab 
# /etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
/dev/disk/by-id/dm-uuid-LVM-Yk4DibxWKO79hebBzeGfuwkx7J5of11iY68R4fVIy7zCJJJgAkt0MvPx5rLORxGd / ext4 defaults 0 1
# /boot was on /dev/sda2 during curtin installation
/dev/disk/by-uuid/dbade222-4031-44a3-8126-76bd9b33e01e /boot ext4 defaults 0 1
/swap.img	none	swap	sw	0	0
/dev/mapper/main--vg-ubuntu--lv
#VAGRANT-BEGIN
# The contents below are automatically generated by Vagrant. Do not modify.
#VAGRANT-END
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ cat /etc/default/grub
GRUB_TIMEOUT=1
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="no_timer_check console=tty0 console=ttyS0,115200n8 net.ifnames=0 biosdevname=0 elevator=noop crashkernel=auto rd.lvm.lv=main-vg/ubuntu-lv rd.lvm.lv=main-vg/ubuntu-lv rhgb quiet"
GRUB_DISABLE_RECOVERY="true"
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ sudo cat /boot/grub/grub.cfg
#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  set have_grubenv=true
  load_env
fi
if [ "${initrdfail}" = 2 ]; then
   set initrdfail=
elif [ "${initrdfail}" = 1 ]; then
   set next_entry="${prev_entry}"
   set prev_entry=
   save_env prev_entry
   if [ "${next_entry}" ]; then
      set initrdfail=2
   fi
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
function initrdfail {
    if [ -n "${have_grubenv}" ]; then if [ -n "${partuuid}" ]; then
      if [ -z "${initrdfail}" ]; then
        set initrdfail=1
        if [ -n "${boot_once}" ]; then
          set prev_entry="${default}"
          save_env prev_entry
        fi
      fi
      save_env initrdfail
    fi; fi
}
function recordfail {
  set recordfail=1
  if [ -n "${have_grubenv}" ]; then if [ -z "${boot_once}" ]; then save_env recordfail; fi; fi
}
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_gpt
insmod lvm
insmod ext2
set root='lvmid/Yk4Dib-xWKO-79he-bBze-Gfuw-kx7J-5of11i/Y68R4f-VIy7-zCJJ-JgAk-t0Mv-Px5r-LORxGd'
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root --hint='lvmid/Yk4Dib-xWKO-79he-bBze-Gfuw-kx7J-5of11i/Y68R4f-VIy7-zCJJ-JgAk-t0Mv-Px5r-LORxGd'  497d8678-99d6-483b-9f11-0f92025ff55f
else
  search --no-floppy --fs-uuid --set=root 497d8678-99d6-483b-9f11-0f92025ff55f
fi
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_output gfxterm
if [ "${recordfail}" = 1 ] ; then
  set timeout=30
else
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=hidden
    set timeout=0
  # Fallback hidden-timeout code in case the timeout_style feature is
  # unavailable.
  elif sleep --interruptible 0 ; then
    set timeout=0
  fi
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/05_debian_theme ###
set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
### END /etc/grub.d/05_debian_theme ###

### BEGIN /etc/grub.d/10_linux ###
function gfxmode {
	set gfxpayload="${1}"
	if [ "${1}" = "keep" ]; then
		set vt_handoff=vt.handoff=7
	else
		set vt_handoff=
	fi
}
if [ "${recordfail}" != 1 ]; then
  if [ -e ${prefix}/gfxblacklist.txt ]; then
    if [ ${grub_platform} != pc ]; then
      set linux_gfx_mode=keep
    elif hwmatch ${prefix}/gfxblacklist.txt 3; then
      if [ ${match} = 0 ]; then
        set linux_gfx_mode=keep
      else
        set linux_gfx_mode=text
      fi
    else
      set linux_gfx_mode=text
    fi
  else
    set linux_gfx_mode=keep
  fi
else
  set linux_gfx_mode=text
fi
export linux_gfx_mode
menuentry 'Ubuntu' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-497d8678-99d6-483b-9f11-0f92025ff55f' {
	recordfail
	load_video
	gfxmode $linux_gfx_mode
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	set root='hd0,gpt2'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  dbade222-4031-44a3-8126-76bd9b33e01e
	else
	  search --no-floppy --fs-uuid --set=root dbade222-4031-44a3-8126-76bd9b33e01e
	fi
	linux	/vmlinuz-5.15.0-67-generic root=/dev/mapper/main--vg-ubuntu--lv ro net.ifnames=0 biosdevname=0  
	initrd	/initrd.img-5.15.0-67-generic
}
submenu 'Advanced options for Ubuntu' $menuentry_id_option 'gnulinux-advanced-497d8678-99d6-483b-9f11-0f92025ff55f' {
	menuentry 'Ubuntu, with Linux 5.15.0-67-generic' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.0-67-generic-advanced-497d8678-99d6-483b-9f11-0f92025ff55f' {
		recordfail
		load_video
		gfxmode $linux_gfx_mode
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		set root='hd0,gpt2'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  dbade222-4031-44a3-8126-76bd9b33e01e
		else
		  search --no-floppy --fs-uuid --set=root dbade222-4031-44a3-8126-76bd9b33e01e
		fi
		echo	'Loading Linux 5.15.0-67-generic ...'
		linux	/vmlinuz-5.15.0-67-generic root=/dev/mapper/main--vg-ubuntu--lv ro net.ifnames=0 biosdevname=0  
		echo	'Loading initial ramdisk ...'
		initrd	/initrd.img-5.15.0-67-generic
	}
	menuentry 'Ubuntu, with Linux 5.15.0-67-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.0-67-generic-recovery-497d8678-99d6-483b-9f11-0f92025ff55f' {
		recordfail
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		set root='hd0,gpt2'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  dbade222-4031-44a3-8126-76bd9b33e01e
		else
		  search --no-floppy --fs-uuid --set=root dbade222-4031-44a3-8126-76bd9b33e01e
		fi
		echo	'Loading Linux 5.15.0-67-generic ...'
		linux	/vmlinuz-5.15.0-67-generic root=/dev/mapper/main--vg-ubuntu--lv ro single nomodeset dis_ucode_ldr net.ifnames=0 biosdevname=0 
		echo	'Loading initial ramdisk ...'
		initrd	/initrd.img-5.15.0-67-generic
	}
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/10_linux_zfs ###
### END /etc/grub.d/10_linux_zfs ###

### BEGIN /etc/grub.d/20_linux_xen ###

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/35_fwupd ###
### END /etc/grub.d/35_fwupd ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg
fi
### END /etc/grub.d/41_custom ###
vagrant@boot:~$
vagrant@boot:~$ sudo reboot

###########
#REBOOTING#
###########

vagrant@boot:~$ sudo vgs
  VG      #PV #LV #SN Attr   VSize   VFree 
  main-vg   1   1   0 wz--n- <62.00g 31.00g
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ sudo update-initramfs -u
update-initramfs: Generating /boot/initrd.img-5.15.0-67-generic
vagrant@boot:~$ 
vagrant@boot:~$ 
agrant@boot:~$ sudo mkdir /etc/initramfs-tools/scripts/test
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ sudo touch /etc/initramfs-tools/scripts/test/module-setup.sh
vagrant@boot:~$ 
vagrant@boot:~$
vagrant@boot:~$ cat /etc/initramfs-tools/scripts/test/module-setup.sh
#!/bin/bash

check() {
    return 0
}

depends() {
    return 0
}

install() {
    inst_hook cleanup 00 "${moddir}/test.sh"
}
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ sudo nano /etc/initramfs-tools/scripts/test/test.sh
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ cat  /etc/initramfs-tools/scripts/test/test.sh
#!/bin/bash

exec 0<>/dev/console 1<>/dev/console 2<>/dev/console
cat <<'msgend'
Hello! You are in dracut module!
 ___________________
< I'm dracut module >
 -------------------
   \
    \
        .--.
       |o_o |
       |:_/ |
      //   \ \
     (|     | )
    /'\_   _/`\
    \___)=(___/
msgend
sleep 10
echo " continuing...."
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ cat /etc/initramfs-tools/modules 
# List of modules that you want to include in your initramfs.
# They will be loaded at boot time in the order below.
#
# Syntax:  module_name [args ...]
#
# You must run update-initramfs(8) to effect this change.
#
# Examples:
#
# raid1
# sd_mod
test
vagrant@boot:~$ 
vagrant@boot:~$ 
vagrant@boot:~$ sudo update-initramfs -u
update-initramfs: Generating /boot/initrd.img-5.15.0-67-generic
vagrant@boot:~$ 
vagrant@boot:~$ 
